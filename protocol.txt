NOTICE

- values are all big-endian


SERVER

loop
	recieve message
		if ping [RECV Command::Ping]
			reply with status [SEND HostStatus::Server(ServerStatus::Running)]
		if client connect [RECV Command::Connect, x: f64, y: f64, rotation: f64, fov: f64]
			accept, add to clients
		if value update [RECV Command::UpdateValue, value: f64]
			update value
			if all values updated
				calculate new position
				notify subscribers
kill all clients [SEND Command::Kill]

CLIENT

outer loop
	wait for ping [RECV Command::Ping]
	reply with status [SEND HostStatus(ClientStatus::Idle)]
	wait for organizer start [RECV Command::Start]
	loop
		receive message
		if image request [RECV Command::RequestImage]
   			send image from camera [SEND len: u64, img: [u8]]
   			continue
		if done [RECV Command::ImagesDone]
			break
	if calibrated
  		recieve camera info (without fov) and server ip [RECV x: f64, y: f64, rotation: f64, ip_len: u16, ip: [u8]]
 	if not calibrated
		recieve camera info (with fov) and server ip [RECV x: f64, y: f64, rotation: f64, fov: f64, ip_len: u16, ip: [u8]]
	connect [SEND Command::Connect, x: f64, y: f64, rotation: f64, fov: f64]
	inner loop
		receive message
			if stop [RECV Command::Stop]
				break (inner)
			if ping [RECV Command::Ping]
				reply with status [SEND HostStatus(ClientStatus::Running)]
		find x value
		send value to server [SEND Command::UpdateValue, value: f64]


ORGANIZER

loop
	loop through ips
		send ping [SEND Command::Ping]
		if offline
			continue
		if server [RECV HostStatus::Server]
			set server ip
		if client [RECV HostStatus::Client | HostStatus::ConfiglessClient]
			update client status
 get user action
	if client start
		send start [SEND Command::Start]
		loop
			send image request [SEND Command::RequestImage]
			recieve jpg image [RECV len: u64, bytes: [u8]]
				show image to user
				if user wants to quit
					send stream stop [SEND Command::ImagesDone]
		prompt user for position (and calibrate if needed)
		send info and server ip [SEND x: f64, y: f64, rotation: f64, fov: f64, ip_len: u16, ip: [u8]]
	if client stop
		send stop [SEND Command::Stop]
